!function(){angular.module("angular-jwt-auth",["angular-jwt","angular-jwt-auth.credentials","angular-ws-service","LocalStorageModule"]).config(["$httpProvider","jwtInterceptorProvider","credentialsServiceProvider",function(e,t,n){t.tokenGetter=["$injector","config","jwtHelper","$http","localStorageService",function(e,t,r,o,i){if(".html"==t.url.substr(t.url.length-5))return null;var u=e.invoke(n.existingTokenRetriever);return null!==u.token&&r.isTokenExpired(u.token)?o({url:n.urlTokenRefresh,skipAuthorization:!0,ignoreAuthModule:!0,method:"POST",data:{refresh_token:u.refreshToken}}).then(function(t){var r=t.data;return e.invoke(n.tokenSaver,r),r.token},function(){return null}):u.token}],e.interceptors.push("jwtInterceptor")}]).run(["$injector","$rootScope","authService","credentialsService","jwtInterceptor",function(e,t,n,r,o){t.$on("event:auth-loginRequired",function(t){var o=e.invoke(r.credentialsRetriever);return null===o?config:void e.invoke(r.tokenRetriever,{_username:o.username,_password:o.password}).then(function(e){var t=e.data;n.loginConfirmed(t,function(e){return e.headers.Authorization="Bearer "+t.token,e})},function(e){n.loginCancelled()})})}]).run(["$injector","$rootScope","credentialsService",function(e,t,n){t.$on("event:auth-loginConfirmed",function(t,r){e.invoke(n.tokenSaver,r)}),t.$on("event:auth-loginCancelled",function(t){e.invoke(n.tokenRemover)})}]),angular.module("angular-jwt-auth.credentials",[]).provider("credentialsService",function(){this.urlLoginCheck="/login_check",this.urlTokenRefresh="/token/refresh",this.credentialsRetriever=function(){},this.existingTokenRetriever=function(){},this.tokenRetriever=function(e){},this.tokenSaver=function(e){},this.tokenRemover=function(e){},this.$get=function(){return{credentialsRetriever:this.credentialsRetriever,tokenRetriever:this.tokenRetriever,existingTokenRetriever:this.existingTokenRetriever,tokenSaver:this.tokenSaver,tokenRemover:this.tokenRemover}}}).config(["credentialsServiceProvider",function(e){e.credentialsRetriever=["localStorageService",function(e){return{username:e.get("auth.username"),password:e.get("auth.password")}}],e.tokenSaver=["localStorageService",function(e){e.set("auth.jwt_token",this.token),e.set("auth.jwt_refresh_token",this.refresh_token)}],e.existingTokenRetriever=["localStorageService",function(e){return{token:e.get("auth.jwt_token"),refreshToken:e.get("auth.jwt_refresh_token")}}],e.tokenRemover=["localStorageService",function(e){e.remove("auth.jwt_token","auth.refresh_token")}],e.tokenRetriever=["$http","WsService",function(t,n){return t.post(e.urlLoginCheck,this,{ignoreAuthModule:!0,skipAuthorization:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:n.objectToURLEncoded})}]}])}();